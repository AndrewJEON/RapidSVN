AC_INIT(src/rapidsvn_app.cpp)
AM_INIT_AUTOMAKE(rapidsvn, 0.4.0)

AC_PROG_CXX
AC_PROG_INSTALL
AC_LIBTOOL_DLOPEN
AC_PROG_LIBTOOL

abs_srcdir="`cd $srcdir && pwd`"
CPPFLAGS="$CPPFLAGS -Wall -g -fexceptions -I$abs_srcdir/include"
CXXFLAGS="$CXXFLAGS -Wall -g -fexceptions"

dnl
dnl APR
dnl

APR_CONFIGS="apr-config /usr/local/apr/bin/apr-config"
AC_ARG_WITH(apr-config,
[[  --with-apr-config=FILE    Use the given path to apr-config when determining
                            APR configuration; defaults to "apr-config"]],
[
    if test "$withval" != "yes" -a "$withval" != ""; then
        APR_CONFIGS=$withval
    fi
])
AC_MSG_CHECKING([for APR])
APR_CONFIG=""
for VALUE in $APR_CONFIGS ; do
	if $VALUE --cflags > /dev/null; then
		APR_CONFIG=$VALUE
		break
	fi
done
test $VALUE && APR_CONFIG=$VALUE
if test $APR_CONFIG ; then
    AC_MSG_RESULT([found])
else
    AC_MSG_RESULT([not found])
    AC_MSG_ERROR([APR is required. Try --with-apr-config.])
fi
	
CPPFLAGS="$CPPFLAGS  `$APR_CONFIG --cppflags` `$APR_CONFIG --includes`"
APR_LIBS="`$APR_CONFIG --link-ld --libs`"

dnl
dnl APR util
dnl

APU_CONFIGS="apu-config /usr/local/apr/bin/apu-config"
AC_ARG_WITH(apu-config,
[[  --with-apu-config=FILE    Use the given path to apu-config when determining
                            APR util configuration; defaults to "apu-config"]],
[
    if test "$withval" != "yes" -a "$withval" != ""; then
        APU_CONFIGS=$withval
    fi
])
AC_MSG_CHECKING([for APR util])
APU_CONFIG=""
for VALUE in $APU_CONFIGS ; do
	if $VALUE --includes > /dev/null; then
		APU_CONFIG=$VALUE
		break
	fi
done
if test $APU_CONFIG ; then
    AC_MSG_RESULT([found])
else
    AC_MSG_RESULT([not found])
    AC_MSG_ERROR([APR util is required. Try --with-apu-config.])
fi
CPPFLAGS="$CPPFLAGS `$APU_CONFIG --includes`"
APR_LIBS="$APR_LIBS `$APU_CONFIG --link-ld --libs`"


dnl
dnl Neon
dnl
SEARCH="neon-config"
AC_ARG_WITH(neon-config,
[[  --with-neon-config=FILE     Use the given path to neon-config when determining
                            Neon configuration; defaults to "neon-config"]],
[
    if test "$withval" != "yes" -a "$withval" != ""; then
        SEARCH=$withval
    fi
])
AC_MSG_CHECKING([Neon])
NEON_CONFIG=""
for VALUE in $SEARCH ; do
	if CHECK=`$VALUE --version` >/dev/null ; then
		NEON_CONFIG=$VALUE
		break
	fi
done
if test $NEON_CONFIG ; then	
	AC_MSG_RESULT([found])
else
	AC_MSG_RESULT([not found])
	AC_MSG_ERROR([Neon is required. Try --with-neon-config.])
fi
CPPFLAGS="$CPPFLAGS `$NEON_CONFIG --cflags`"
NEON_LIBS="`$NEON_CONFIG --libs`"


dnl
dnl Subversion
dnl

SVN_INCLUDES="/usr/local/include /usr/include"
AC_ARG_WITH(svn-include,
[[  --with-svn-include=DIR   Use the given path to the subversion headers.]],
[
    if test "$withval" != "yes" -a "$withval" != ""; then
        SVN_INCLUDES=$withval
    fi
])
AC_MSG_CHECKING([for Subversion headers])
SVN_INCLUDE=""
for VALUE in $SVN_INCLUDES ; do
    if test -f $VALUE/subversion-1/svn_types.h ; then
        SVN_INCLUDE=$VALUE
        break
    fi
done
if test $SVN_INCLUDE ; then
    AC_MSG_RESULT([found])
else
    AC_MSG_RESULT([not found])
    AC_MSG_ERROR([Subversion headers are required. Try --with-svn-include.])
fi
CPPFLAGS="$CPPFLAGS -I$SVN_INCLUDE/subversion-1"

SVN_LIBS="/usr/local/lib /usr/lib"
AC_ARG_WITH(svn-lib,
[[  --with-svn-lib=DIR  Use the given path to the subversion libraries.]],
[
    if test "$withval" != "yes" -a "$withval" != ""; then
        SVN_LIBS=$withval
    fi
])
AC_MSG_CHECKING([for Subversion libraries])
SVN_LIB=""
for VALUE in $SVN_LIBS ; do
	LIBSVN_RESULT=`find $VALUE -name "libsvn_client-1.*" -maxdepth 1 \( -type f -o -type l \)`
	if test -n "$LIBSVN_RESULT"; then
		SVN_LIB=$VALUE
		break
	fi
done
if test $SVN_LIB ; then
    AC_MSG_RESULT([found])
else
    AC_MSG_RESULT([not found])
    AC_MSG_ERROR([Subversion libraries are required. Try --with-svn-lib.])
fi
SVN_LIBS="-L$SVN_LIB -lsvn_client-1 -lsvn_wc-1 -lsvn_ra-1 -lsvn_delta-1 -lsvn_subr-1"

dnl
dnl wxWindows
dnl

WX_CONFIGS="wx-config"
AC_ARG_WITH(wx-config,
[[  --with-wx-config=FILE     Use the given path to wx-config when determining
                            wxWindows configuration; defaults to "wx-config"]],
[
    if test "$withval" != "yes" -a "$withval" != ""; then
        WX_CONFIGS=$withval
    fi
])
AC_MSG_CHECKING([wxWindows version])
WX_CONFIG=""
for VALUE in $WX_CONFIGS ; do
	if WX_VERSION=`$VALUE --version` >/dev/null ; then
		WX_CONFIG=$VALUE
		break
	fi
done
if test $WX_CONFIG ; then	
	AC_MSG_RESULT([$WX_VERSION])
else
	AC_MSG_RESULT([not found])
	AC_MSG_ERROR([wxWindows is required. Try --with-wx-config.])
fi
case $WX_VERSION in
    [2.3.3])
        ;;
    [2.[4-9].*])
        ;;
    *)
        AC_MSG_ERROR([wxWindows = 2.3.3 or >= 2.4.0 required])
	AC_MSG_ERROR([Try --with-wx-config.])
        ;;
esac
CPPFLAGS="$CPPFLAGS `$WX_CONFIG --cppflags`"
CXXFLAGS="$CXXFLAGS `$WX_CONFIG --cxxflags | sed -e 's/-fno-exceptions//'`"
WX_LIBS="`$WX_CONFIG --libs`"

dnl
dnl CppUnit
dnl 

CPPUNITCONFIG=
AC_ARG_WITH(cppunit-config,
[[  --with-cppunit-config=FILE     Use the given path to cppunit-config
                            when determining the cpp Unit configuration; 
                            defaults to ""]],
[
    if test "$withval" != "yes" -a "$withval" != ""; then
        CPPUNITCONFIG=$withval
    fi
])

dnl
dnl XsltProc
dnl 
XSLTPROC=xsltproc
AC_ARG_WITH(xsltproc,
[[  --with-xsltproc=FILE     Use the given path to xsltproc; 
                            defaults to "xsltproc"]],
[
    if test "$withval" != "yes"; then
        XSLTPROC=$withval
    fi
])
AC_MSG_CHECKING([xsltproc])
if test -z "$XSLTPROC" ; then
   AC_MSG_RESULT([not used])
else
   if $XSLTPROC --version > /dev/null ; then
      AC_MSG_RESULT([found])
   else
      AC_MSG_RESULT([not found])	
      XSLTPROC=""
   fi
fi

dnl
dnl Docbook XSL
dnl
dnl DOCBOOK_XSL="/etc/sgml/docbook-xsl"
DOCBOOK_XSL="/usr/share/sgml/docbook/stylesheet/xsl/nwalsh/manpages"
AC_ARG_WITH(docbook-xsl,
[[  --with-docbook-xsl=DIR   Determine the location of the
                           DocBook XSL stylesheets,
                           needed for manpage generation.
                           Defaults to "/usr/share/sgml/docbook/stylesheet/xsl/nwalsh/manpages".]],
[
    if test "$withval" != "yes"; then
        DOCBOOK_XSL=$withval
    fi
])
AC_MSG_CHECKING([docbook xsl stylesheets ($DOCBOOK_XSL)])
if test -z "$DOCBOOK_XSL" ; then
   AC_MSG_RESULT([no])
else
   if test -d "$DOCBOOK_XSL" ; then
      AC_MSG_RESULT([found])
   else
      AC_MSG_RESULT([not found])
      DOCBOOK_XSL=""
   fi
fi
if test "$DOCBOOK_XSL" ; then
   DOCBOOK_XSL_MANS="$DOCBOOK_XSL/manpages"
   AC_MSG_CHECKING([docbook xsl support for manpages ($DOCBOOK_XSL_MANS)])
   if test -d "$DOCBOOK_XSL_MANS" ; then
      AC_MSG_RESULT([found])
   else      
      AC_MSG_RESULT([not found])
      DOCBOOK_XSL=""
   fi
fi


dnl
dnl Manpage creation (with xsltproc)
dnl
AC_MSG_CHECKING([manpage creation])
if test "$XSLTPROC" -a "$DOCBOOK_XSL" ; then
   AC_MSG_RESULT([yes])
   TARGET_MANPAGE=manpage-yes
else
   AC_MSG_RESULT([no (xsltproc and docbook-xsl with manpage support needed)])
   TARGET_MANPAGE=manpage-no
fi

dnl
dnl Doxygen
dnl 
DOXYGEN=doxygen
AC_ARG_WITH(doxygen,
[[  --with-doxygen=FILE     Use the given path to doxygen.
                          Used for creating API documentation; 
                          defaults to "doxygen"]],
[
    if test "$withval" != "yes"; then
        DOXYGEN=$withval
    fi
])
AC_MSG_CHECKING([doxygen])
if test -z "$DOXYGEN" ; then
   AC_MSG_RESULT([not used])
else
   if doxygenversion=`$DOXYGEN --version` ; then
      AC_MSG_RESULT([found])
   else
      AC_MSG_RESULT([not found])	
      DOXYGEN=""
   fi
fi

dnl
dnl Dot (Graphviz)
dnl 
DOT=dot
AC_ARG_WITH(dot,
[[  --with-dot=FILE     Use the given path to dot. 
                      This tool is needed by doxygen; 
                      defaults to "dot"]],
[
    if test "$withval" != "yes"; then
        DOT=$withval
    fi
])
AC_MSG_CHECKING([dot])
if test -z "$DOT" ; then
   AC_MSG_RESULT([not used])
else
   if dotbla=`echo | $DOT` ; then
      AC_MSG_RESULT([found])
   else
      AC_MSG_RESULT([not found])	
      DOT=""
   fi
fi

dnl
dnl Final check for Doxygen
dnl
if test "$DOXYGEN" ; then
   AC_MSG_CHECKING([doxygen usable])
   if test -z "$DOT" ; then
      AC_MSG_RESULT([no (dot needed)])
      DOXYGEN=""
   else
      AC_MSG_RESULT([yes])
   fi
fi

if test "$DOXYGEN" ; then
   TARGET_DOXYGEN="doxygen-yes"
else 
   TARGET_DOXYGEN="doxygen-no"
fi

AC_SUBST(APR_LIBS)
AC_SUBST(WX_LIBS)
AC_SUBST(SVN_LIBS)
AC_SUBST(NEON_LIBS)
AC_SUBST(DOCBOOK_XSL)
AC_SUBST(XSLTPROC)
AC_SUBST(TARGET_MANPAGE)
AC_SUBST(DOXYGEN)
AC_SUBST(TARGET_DOXYGEN)

AC_OUTPUT(Makefile \
          doc/Makefile \
          doc/manpage/Makefile \
          include/Makefile \
          include/svncpp/Makefile \
          src/Makefile \
          src/svncpp/Makefile \
          src/res/Makefile)

if test "$CPPUNITCONFIG" ; then
    CPPUNIT_CXXFLAGS="`$CPPUNITCONFIG --cflags`"
    CPPUNIT_LIBS="`$CPPUNITCONFIG --libs`"
    AC_SUBST(CPPUNIT_LIBS)
    AC_SUBST(CPPUNIT_CXXFLAGS)
    AC_OUTPUT(src/tests/svncpp/Makefile)
fi
